services:
  minio:
    image: minio/minio
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-ROOTUSER}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-CHANGEME123}
      MINIO_PORT: ${MINIO_PORT:-9000}
      MINIO_USE_SSL: ${MINIO_USE_SSL:-false}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    container_name: viz-test-kafka-container
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "${KAFKA_IFC_TOPIC:-ifc-files}:1:1, ${KAFKA_LCA_TOPIC:-lca-data}:1:1, ${KAFKA_COST_TOPIC:-cost-data}:1:1"
      KAFKA_BROKER: kafka:9093
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper


  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

  nhmzh-viz-services_ifc:
    image: yschindel/nhmzh-viz-services_ifc:latest
    environment:
      NODE_ENV: development 
      STORAGE_SERVICE_API_KEY: ${VIZ_API_KEY:-123}
      STORAGE_SERVICE_URL: http://nhmzh-viz-services_pbi-server:3000
      STORAGE_ENDPOINT_FILE: /blob
      STORAGE_ENDPOINT_DATA_ELEMENTS: /data/elements
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ROOTUSER
      MINIO_SECRET_KEY: CHANGEME123
      MINIO_USE_SSL: false
      MINIO_IFC_BUCKET: ifc-files
      KAFKA_BROKER: kafka:9093
      KAFKA_IFC_TOPIC: ifc-files
      # Specify the properties to extract from the IFC file:
      IFC_PROPERTIES_TO_INCLUDE: Reference,LoadBearing,FireRating,Name,category,level,eBKP
    depends_on:
      - minio
      - kafka
    restart: on-failure

  nhmzh-viz-services_lca-cost:
    image: yschindel/nhmzh-viz-services_lca-cost:latest
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-development}
      KAFKA_BROKER: kafka:9093
      KAFKA_LCA_TOPIC: lca-data
      KAFKA_COST_TOPIC: cost-data
      STORAGE_SERVICE_API_KEY: ${VIZ_API_KEY:-123}
      STORAGE_SERVICE_URL: http://nhmzh-viz-services_pbi-server:3000
      STORAGE_ENDPOINT_DATA_MATERIALS: /data/materials
      STORAGE_ENDPOINT_DATA_ELEMENTS: /data/elements
    depends_on:
      - kafka
    restart: on-failure

  nhmzh-viz-services_pbi-server:
    image: yschindel/nhmzh-viz-services_pbi-server:latest
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-development}
      API_KEY: ${VIZ_API_KEY:-123}
      STORAGE_ENDPOINT_FILE: /blob
      STORAGE_ENDPOINT_DATA_MATERIALS: /data/materials
      STORAGE_ENDPOINT_DATA_ELEMENTS: /data/elements
      AZURE_STORAGE_CONNECTION_STRING: ${AZURE_STORAGE_CONNECTION_STRING:-DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1}
      AZURE_DB_PORT: ${AZURE_DB_PORT:-1433}
      AZURE_DB_USER: ${AZURE_DB_USER:-sa}
      AZURE_DB_PASSWORD: ${AZURE_DB_PASSWORD:-P@ssw0rd}
      AZURE_DB_DATABASE: ${AZURE_DB_DATABASE:-nhmzh-viz-services-localdev}
      AZURE_DB_SERVER: ${AZURE_DB_SERVER:-sqlserver} # Override to connect to the Docker service instead of host.docker.internal
      VIZ_IFC_FRAGMENTS_BUCKET: ${VIZ_IFC_FRAGMENTS_BUCKET:-ifc-fragment-files}
    # depends_on:
      # Azure SQL Cloud Server & SQL Cloud DB
      # Azure Cloud Blob Storage
    ports:
      - "3000:3000"
    restart: on-failure

volumes:
  minio_data:
